# max workers ratio defining how much CPU cores to use
max_workers_ratio: 0.5

add:
  # Maximum length between two consecutive keyframes (in seconds)
  max_scene_length: 2
  # Keyframe size ratio to the original frame. This also affects resolution of videos
  keyframe_resize_ratio: 0.5
  # Thumbnail size ratio to the keyframe
  thumbnail_resize_ratio: 0.25
  # Max clips length around the keyframes (in seconds)
  clip_length: 7
  # Video compress ratio
  compress_size_rate: 0.5


features: &analyse_features
  clipb32:
    model: "image_clip"
    source: "hf"
    pretrained_model: "openai/clip-vit-base-patch32" 
    analyse:
      batch_size: 16
    index:
      datatype: "FLOAT_VECTOR"
      metric_type: "IP"
      index_type: "SCANN"
      params:
        nlist: 512
  ocr:
    model: "ocr"
    pretrained_model: "tesseract"
    analyse:
      batch_size: 8
    index:
      datatype: "JSON"
      


  # - name: "clip32"
  #   model: "clip"
  #   pretrained_model: "openai/clip-vit-base-patch32"
  #   batch_size: 16
  # - name: "ocr"
  #   batch_size: 8
  # - name: "yolo"
  #   pretrained_model: "yolov8l-oiv7.pt"
  #   batch_size: 16

analyse:
  # List of features to extract
  num_workers: 1
  pin_memory: true

milvus:
  fields:
    - field_name: "frame_id"
      datatype: "VARCHAR"
      max_length: 32
      is_primary: true
    - field_name: "clip"
      datatype: "FLOAT_VECTOR"
      dim: 1024
    - field_name: "ocr"
      datatype: "JSON"
    - field_name: "yolo"
      datatype: "JSON"
  indices:
    - field_name: "clip"
      metric_type: "IP"
      index_type: "SCANN"
      index_name: "clip_index"
      params:
        nlist: 512

webui:
  features: *analyse_features
  database: "milvus"
  workers: 1
  search:
    timeout: null
    request_size: 10
    workers: 1
    backends:
      - host: http://127.0.0.1:5010
  video:
    timeout: null
    request_size: 10
    workers: 1
    backends:
      - host: http://127.0.0.1:5011
